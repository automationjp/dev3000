services:
  dev3000:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: dev3000

    # Security hardening
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: false  # We need write access for node_modules and .next

    # Port mappings
    ports:
      - "3000:3000"   # Next.js / App server
      - "3684:3684"   # Dev3000 MCP server

    # Volume mounts - removed to avoid WSL2 permission issues
    # Application files are copied into image during build

    # Environment variables
    environment:
      # CDP configuration for host Chrome connection
      # Set DEV3000_CDP_URL to connect to Chrome running on host
      # Default: http://host.docker.internal:9222 (works on Docker Desktop)
      # For WSL2: Use host.docker.internal to access Windows host
      - DEV3000_CDP_URL=${DEV3000_CDP_URL:-http://host.docker.internal:9222}

      # Node.js environment
      - NODE_ENV=development

      # File watching for hot reload (required for Docker/WSL)
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true

      # Next.js configuration
      - NEXT_TELEMETRY_DISABLED=1

      # Dev3000 logging configuration
      - LOG_FILE_PATH=/tmp/d3k.log

    # WSL2 compatibility: Map host.docker.internal to Windows host IP
    extra_hosts:
      - "host.docker.internal:host-gateway"

    # Command to run - simplified since dependencies are pre-installed in image
    command: >
      sh -c "
        set -x
        rm -f /tmp/dev3000-*.lock
        echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
        echo '🚀 Starting dev3000...'
        echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
        echo '[$(date +%Y-%m-%d\ %H:%M:%S)] System Information:'
        echo '  Node version: '$(node --version)
        echo '  npm version: '$(npm --version)
        echo '  User: '$(whoami)
        echo '  User ID: '$(id)
        echo '  Working directory: '$(pwd)
        echo '  Directory permissions:'
        ls -la
        echo ''
        echo '[$(date +%Y-%m-%d\ %H:%M:%S)] Environment Variables:'
        env | grep -E 'DEV3000|NODE|LOG|CDP' | sort
        echo ''
        echo '[$(date +%Y-%m-%d\ %H:%M:%S)] Checking dev3000 installation:'
        which dev3000
        dev3000 --version || echo 'Failed to get dev3000 version'
        echo ''
        echo '[$(date +%Y-%m-%d\ %H:%M:%S)] Checking lsof availability:'
        which lsof
        lsof -v 2>&1 | head -3
        echo ''
        echo '[$(date +%Y-%m-%d\ %H:%M:%S)] Checking port availability:'
        lsof -i :3000 || echo 'Port 3000 is free'
        lsof -i :3684 || echo 'Port 3684 is free'
        echo ''
        echo '[$(date +%Y-%m-%d\ %H:%M:%S)] Starting dev3000 with debug enabled...'
        echo 'CDP URL: '${DEV3000_CDP_URL:-http://host.docker.internal:9222}
        dev3000 --port 3000 --debug
      "

    # Restart policy
    restart: unless-stopped

    # Resource limits (optional but recommended)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 512M

# Networks (using default bridge network)
networks:
  default:
    driver: bridge

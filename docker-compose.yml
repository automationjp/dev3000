# Dev3000 Docker Compose Reference Implementation
#
# This file demonstrates how to run dev3000 with Docker.
#
# For users: When using dev3000 as a git submodule at frontend/.dev3000/,
# copy this file to your project root and update the build context:
#   build.context: ./frontend/.dev3000

services:
  # Dev3000 container (runs both frontend app and MCP server)
  dev3000:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        BUILDKIT_INLINE_CACHE: 1
      target: development
    container_name: dev3000

    # Security hardening (relaxed for development)
    security_opt:
      - no-new-privileges:true

    # Port mappings
    ports:
      - "3000:3000"   # Next.js development server
      - "3684:3684"   # Dev3000 MCP Server UI

    # Volume mounts
    volumes:
      # Mount frontend directory (includes .dev3000 subdirectory)
      # Use delegated consistency for better WSL2 performance
      - ./frontend:/app/frontend:delegated
      # Use named volume for node_modules (avoids WSL2 permission issues)
      - node_modules:/app/frontend/node_modules
      - next_cache:/app/frontend/.next

    # Environment variables
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_TELEMETRY_DISABLED=1
      # CDP connection (connect to host machine's Chrome)
      # To enable screenshots: Run Chrome with --remote-debugging-port=9222
      # Example: chrome.exe --remote-debugging-port=9222 --remote-debugging-address=0.0.0.0 --user-data-dir=C:\temp\chrome-dev-profile
      # Or use: make start-chrome-cdp
      - DEV3000_CDP_URL=http://host.docker.internal:9222

    # Allow access to host (for Chrome CDP on Windows/WSL2)
    extra_hosts:
      - "host.docker.internal:host-gateway"

    # Restart policy
    restart: unless-stopped

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 6G
        reservations:
          cpus: '1.0'
          memory: 1G

# Named volumes for better performance and WSL2 compatibility
volumes:
  node_modules:
  next_cache:
